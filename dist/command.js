#! /usr/bin/env node

//
//  Generated by https://www.npmjs.com/package/amd-bundle
//
(function (factory) {

    if ((typeof define === 'function')  &&  define.amd)
        define('command', ["fs-extra","path","jsdom","amd-bundle","sass","less","stylus","babel-polyfill","commander","puppeteer-browser"], factory);
    else if (typeof module === 'object')
        return  module.exports = factory(require('fs-extra'),require('path'),require('jsdom'),require('amd-bundle'),require('sass'),require('less'),require('stylus'),require('babel-polyfill'),require('commander'),require('puppeteer-browser'));
    else
        return  this['command'] = factory(this['fs-extra'],this['path'],this['jsdom'],this['amd-bundle'],this['sass'],this['less'],this['stylus'],this['babel-polyfill'],this['commander'],this['puppeteer-browser']);

})(function (fs_extra,path,jsdom,amd_bundle,sass,less,stylus,babel_polyfill,commander,puppeteer_browser) {

function merge(base, path) {

    return (base + '/' + path).replace(/\/\//g, '/').replace(/[^/.]+\/\.\.\//g, '').replace(/\.\//g, function (match, index, input) {

        return input[index - 1] === '.' ? match : '';
    });
}

    var require = _require_.bind(null, './');

    function _require_(base, path) {

        var module = _module_[
                /^\w/.test( path )  ?  path  :  ('./' + merge(base, path))
            ],
            exports;

        if (! module.exports) {

            module.exports = { };

            var dependency = module.dependency;

            for (var i = 0;  dependency[i];  i++)
                module.dependency[i] = require( dependency[i] );

            exports = module.factory.apply(
                null,  module.dependency.concat(
                    _require_.bind(null, module.base),  module.exports,  module
                )
            );

            if (exports != null)  module.exports = exports;

            delete module.dependency;  delete module.factory;
        }

        return module.exports;
    }

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _module_ = {
    './Component': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _fsExtra = require('fs-extra');

            var _path = require('path');

            var _jsdom = require('jsdom');

            var _amdBundle = require('amd-bundle');

            var _amdBundle2 = _interopRequireDefault(_amdBundle);

            var _sass = require('sass');

            var SASS = _interopRequireWildcard(_sass);

            var _less = require('less');

            var LESS = _interopRequireWildcard(_less);

            var _stylus = require('stylus');

            var _stylus2 = _interopRequireDefault(_stylus);

            function _interopRequireWildcard(obj) {
                if (obj && obj.__esModule) {
                    return obj;
                } else {
                    var newObj = {};if (obj != null) {
                        for (var key in obj) {
                            if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                        }
                    }newObj.default = obj;return newObj;
                }
            }

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }

            function promisify(func) {

                return function () {
                    var _this = this;

                    for (var _len = arguments.length, parameter = Array(_len), _key = 0; _key < _len; _key++) {
                        parameter[_key] = arguments[_key];
                    }

                    return new Promise(function (resolve, reject) {
                        return func.apply(_this, parameter.concat(function (error, result) {
                            return error ? reject(error) : resolve(result);
                        }));
                    });
                };
            }

            var renderSASS = promisify(SASS.render),
                renderStylus = promisify(_stylus2.default.render),
                document = new _jsdom.JSDOM().window.document;

            var Component = function () {
                function Component(path) {
                    _classCallCheck(this, Component);

                    this.path = path;

                    this.name = (0, _path.basename)(path);

                    this.entry = (0, _path.join)(path, 'index.html');

                    this.fragment = null;
                }

                _createClass(Component, [{
                    key: 'parse',
                    value: function () {
                        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                            var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, sheet, style, script;

                            return regeneratorRuntime.wrap(function _callee$(_context) {
                                while (1) {
                                    switch (_context.prev = _context.next) {
                                        case 0:
                                            _context.next = 2;
                                            return Component.parseHTML(this.entry);

                                        case 2:
                                            this.fragment = _context.sent;
                                            _iteratorNormalCompletion = true;
                                            _didIteratorError = false;
                                            _iteratorError = undefined;
                                            _context.prev = 6;
                                            _iterator = Component.findStyle(this.fragment)[Symbol.iterator]();

                                        case 8:
                                            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                                                _context.next = 17;
                                                break;
                                            }

                                            sheet = _step.value;
                                            _context.next = 12;
                                            return Component.parseCSS(sheet.type, sheet.textContent || (0, _path.join)(this.path, sheet.getAttribute('href')));

                                        case 12:
                                            style = _context.sent;


                                            if (style) sheet.replaceWith(style);

                                        case 14:
                                            _iteratorNormalCompletion = true;
                                            _context.next = 8;
                                            break;

                                        case 17:
                                            _context.next = 23;
                                            break;

                                        case 19:
                                            _context.prev = 19;
                                            _context.t0 = _context['catch'](6);
                                            _didIteratorError = true;
                                            _iteratorError = _context.t0;

                                        case 23:
                                            _context.prev = 23;
                                            _context.prev = 24;

                                            if (!_iteratorNormalCompletion && _iterator.return) {
                                                _iterator.return();
                                            }

                                        case 26:
                                            _context.prev = 26;

                                            if (!_didIteratorError) {
                                                _context.next = 29;
                                                break;
                                            }

                                            throw _iteratorError;

                                        case 29:
                                            return _context.finish(26);

                                        case 30:
                                            return _context.finish(23);

                                        case 31:
                                            script = this.fragment.querySelector('script');


                                            script.replaceWith(Component.parseJS((0, _path.join)(this.path, script.getAttribute('src'))));

                                        case 33:
                                        case 'end':
                                            return _context.stop();
                                    }
                                }
                            }, _callee, this, [[6, 19, 23, 31], [24,, 26, 30]]);
                        }));

                        function parse() {
                            return _ref.apply(this, arguments);
                        }

                        return parse;
                    }()
                }, {
                    key: 'toString',
                    value: function toString() {

                        return Array.from(this.fragment.childNodes, function (node) {
                            return node[node.nodeType === 1 ? 'outerHTML' : 'nodeValue'];
                        }).join('');
                    }
                }], [{
                    key: 'loadFile',
                    value: function () {
                        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(path) {
                            return regeneratorRuntime.wrap(function _callee2$(_context2) {
                                while (1) {
                                    switch (_context2.prev = _context2.next) {
                                        case 0:
                                            if (!path.includes('\n')) {
                                                _context2.next = 4;
                                                break;
                                            }

                                            _context2.t0 = path;
                                            _context2.next = 8;
                                            break;

                                        case 4:
                                            _context2.next = 6;
                                            return (0, _fsExtra.readFile)(path);

                                        case 6:
                                            _context2.t1 = _context2.sent;
                                            _context2.t0 = _context2.t1 + '';

                                        case 8:
                                            return _context2.abrupt('return', _context2.t0);

                                        case 9:
                                        case 'end':
                                            return _context2.stop();
                                    }
                                }
                            }, _callee2, this);
                        }));

                        function loadFile(_x) {
                            return _ref2.apply(this, arguments);
                        }

                        return loadFile;
                    }()
                }, {
                    key: 'parseHTML',
                    value: function () {
                        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(path) {
                            return regeneratorRuntime.wrap(function _callee3$(_context3) {
                                while (1) {
                                    switch (_context3.prev = _context3.next) {
                                        case 0:
                                            _context3.t0 = _jsdom.JSDOM;
                                            _context3.next = 3;
                                            return Component.loadFile(path);

                                        case 3:
                                            _context3.t1 = _context3.sent;
                                            return _context3.abrupt('return', _context3.t0.fragment.call(_context3.t0, _context3.t1));

                                        case 5:
                                        case 'end':
                                            return _context3.stop();
                                    }
                                }
                            }, _callee3, this);
                        }));

                        function parseHTML(_x2) {
                            return _ref3.apply(this, arguments);
                        }

                        return parseHTML;
                    }()
                }, {
                    key: 'parseSASS',
                    value: function () {
                        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(path) {
                            return regeneratorRuntime.wrap(function _callee4$(_context4) {
                                while (1) {
                                    switch (_context4.prev = _context4.next) {
                                        case 0:
                                            _context4.t0 = renderSASS;
                                            _context4.next = 3;
                                            return Component.loadFile(path);

                                        case 3:
                                            _context4.t1 = _context4.sent;
                                            _context4.t2 = {
                                                data: _context4.t1
                                            };
                                            return _context4.abrupt('return', (0, _context4.t0)(_context4.t2));

                                        case 6:
                                        case 'end':
                                            return _context4.stop();
                                    }
                                }
                            }, _callee4, this);
                        }));

                        function parseSASS(_x3) {
                            return _ref4.apply(this, arguments);
                        }

                        return parseSASS;
                    }()
                }, {
                    key: 'parseLESS',
                    value: function () {
                        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(path) {
                            return regeneratorRuntime.wrap(function _callee5$(_context5) {
                                while (1) {
                                    switch (_context5.prev = _context5.next) {
                                        case 0:
                                            _context5.t0 = LESS;
                                            _context5.next = 3;
                                            return Component.loadFile(path);

                                        case 3:
                                            _context5.t1 = _context5.sent;
                                            _context5.next = 6;
                                            return _context5.t0.render.call(_context5.t0, _context5.t1);

                                        case 6:
                                            return _context5.abrupt('return', _context5.sent);

                                        case 7:
                                        case 'end':
                                            return _context5.stop();
                                    }
                                }
                            }, _callee5, this);
                        }));

                        function parseLESS(_x4) {
                            return _ref5.apply(this, arguments);
                        }

                        return parseLESS;
                    }()
                }, {
                    key: 'parseStylus',
                    value: function () {
                        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path) {
                            return regeneratorRuntime.wrap(function _callee6$(_context6) {
                                while (1) {
                                    switch (_context6.prev = _context6.next) {
                                        case 0:
                                            _context6.t0 = renderStylus;
                                            _context6.next = 3;
                                            return Component.loadFile(path);

                                        case 3:
                                            _context6.t1 = _context6.sent;
                                            _context6.next = 6;
                                            return (0, _context6.t0)(_context6.t1);

                                        case 6:
                                            return _context6.abrupt('return', _context6.sent);

                                        case 7:
                                        case 'end':
                                            return _context6.stop();
                                    }
                                }
                            }, _callee6, this);
                        }));

                        function parseStylus(_x5) {
                            return _ref6.apply(this, arguments);
                        }

                        return parseStylus;
                    }()
                }, {
                    key: 'parseCSS',
                    value: function () {
                        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(type, path) {
                            var style;
                            return regeneratorRuntime.wrap(function _callee7$(_context7) {
                                while (1) {
                                    switch (_context7.prev = _context7.next) {
                                        case 0:
                                            _context7.t0 = type.split('/')[1];
                                            _context7.next = _context7.t0 === 'sass' ? 3 : _context7.t0 === 'scss' ? 3 : _context7.t0 === 'less' ? 7 : _context7.t0 === 'stylus' ? 11 : 14;
                                            break;

                                        case 3:
                                            _context7.next = 5;
                                            return Component.parseSASS(path);

                                        case 5:
                                            style = _context7.sent;
                                            return _context7.abrupt('break', 14);

                                        case 7:
                                            _context7.next = 9;
                                            return Component.parseLESS(path);

                                        case 9:
                                            style = _context7.sent;
                                            return _context7.abrupt('break', 14);

                                        case 11:
                                            _context7.next = 13;
                                            return Component.parseStylus(path);

                                        case 13:
                                            style = _context7.sent;

                                        case 14:
                                            return _context7.abrupt('return', style && Object.assign(document.createElement('style'), { textContent: style }));

                                        case 15:
                                        case 'end':
                                            return _context7.stop();
                                    }
                                }
                            }, _callee7, this);
                        }));

                        function parseCSS(_x6, _x7) {
                            return _ref7.apply(this, arguments);
                        }

                        return parseCSS;
                    }()
                }, {
                    key: 'findStyle',
                    value: function findStyle(fragment) {
                        var _ref8;

                        return [].concat(_toConsumableArray(fragment.querySelectorAll('link[rel="stylesheet"]')), _toConsumableArray((_ref8 = []).concat.apply(_ref8, _toConsumableArray(Array.from(fragment.querySelectorAll('template'), function (template) {
                            return [].concat(_toConsumableArray(template.content.querySelectorAll('style')));
                        })))));
                    }
                }, {
                    key: 'identifierOf',
                    value: function identifierOf(tagName) {

                        return tagName[0].toUpperCase() + tagName.replace(/-(\w)/g, function (_, char) {
                            return char.toUpperCase();
                        }).slice(1);
                    }
                }, {
                    key: 'parseJS',
                    value: function parseJS(path) {

                        path = path.split('.').slice(0, -1).join('.');

                        return Object.assign(document.createElement('script'), {
                            text: '\n' + new _amdBundle2.default(path).bundle(Component.identifierOf((0, _path.basename)((0, _path.dirname)(path)))) + '\n'
                        });
                    }
                }]);

                return Component;
            }();

            exports.default = Component;
        }
    },
    './index': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            var _this2 = this;

            var build = function () {
                var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(path) {
                    var component;
                    return regeneratorRuntime.wrap(function _callee8$(_context8) {
                        while (1) {
                            switch (_context8.prev = _context8.next) {
                                case 0:
                                    component = new _Component2.default(path);
                                    _context8.next = 3;
                                    return component.parse();

                                case 3:
                                    _context8.next = 5;
                                    return (0, _fsExtra.outputFile)('dist/' + component.name + '.html', component + '');

                                case 5:
                                case 'end':
                                    return _context8.stop();
                            }
                        }
                    }, _callee8, this);
                }));

                return function build(_x8) {
                    return _ref9.apply(this, arguments);
                };
            }();

            var bundle = function () {
                var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(path) {
                    var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, file;

                    return regeneratorRuntime.wrap(function _callee9$(_context9) {
                        while (1) {
                            switch (_context9.prev = _context9.next) {
                                case 0:
                                    if (!(0, _fsExtra.existsSync)((0, _path.join)(path, 'index.html'))) {
                                        _context9.next = 3;
                                        break;
                                    }

                                    _context9.next = 3;
                                    return build(path);

                                case 3:
                                    if (!(0, _fsExtra.statSync)(path).isDirectory()) {
                                        _context9.next = 30;
                                        break;
                                    }

                                    _iteratorNormalCompletion2 = true;
                                    _didIteratorError2 = false;
                                    _iteratorError2 = undefined;
                                    _context9.prev = 7;
                                    _iterator2 = (0, _fsExtra.readdirSync)(path)[Symbol.iterator]();

                                case 9:
                                    if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                                        _context9.next = 16;
                                        break;
                                    }

                                    file = _step2.value;
                                    _context9.next = 13;
                                    return build((0, _path.join)(path, file));

                                case 13:
                                    _iteratorNormalCompletion2 = true;
                                    _context9.next = 9;
                                    break;

                                case 16:
                                    _context9.next = 22;
                                    break;

                                case 18:
                                    _context9.prev = 18;
                                    _context9.t0 = _context9['catch'](7);
                                    _didIteratorError2 = true;
                                    _iteratorError2 = _context9.t0;

                                case 22:
                                    _context9.prev = 22;
                                    _context9.prev = 23;

                                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                                        _iterator2.return();
                                    }

                                case 25:
                                    _context9.prev = 25;

                                    if (!_didIteratorError2) {
                                        _context9.next = 28;
                                        break;
                                    }

                                    throw _iteratorError2;

                                case 28:
                                    return _context9.finish(25);

                                case 29:
                                    return _context9.finish(22);

                                case 30:
                                case 'end':
                                    return _context9.stop();
                            }
                        }
                    }, _callee9, this, [[7, 18, 22, 30], [23,, 25, 29]]);
                }));

                return function bundle(_x9) {
                    return _ref10.apply(this, arguments);
                };
            }();

            var pack = function () {
                var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(path) {
                    var index, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, HTML;

                    return regeneratorRuntime.wrap(function _callee10$(_context10) {
                        while (1) {
                            switch (_context10.prev = _context10.next) {
                                case 0:
                                    index = (0, _path.join)(path, 'index.html');
                                    _context10.next = 3;
                                    return (0, _fsExtra.outputFile)(index, '');

                                case 3:
                                    _iteratorNormalCompletion3 = true;
                                    _didIteratorError3 = false;
                                    _iteratorError3 = undefined;
                                    _context10.prev = 6;
                                    _iterator3 = (0, _fsExtra.readdirSync)(path)[Symbol.iterator]();

                                case 8:
                                    if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                                        _context10.next = 17;
                                        break;
                                    }

                                    HTML = _step3.value;

                                    if (!(HTML !== 'index.html')) {
                                        _context10.next = 14;
                                        break;
                                    }

                                    _context10.next = 13;
                                    return (0, _fsExtra.appendFile)(index, '<!-- ' + HTML + ' -->\n' + (0, _fsExtra.readFileSync)((0, _path.join)(path, HTML)));

                                case 13:

                                    console.info('\u221A Component "' + HTML + '" is packed in');

                                case 14:
                                    _iteratorNormalCompletion3 = true;
                                    _context10.next = 8;
                                    break;

                                case 17:
                                    _context10.next = 23;
                                    break;

                                case 19:
                                    _context10.prev = 19;
                                    _context10.t0 = _context10['catch'](6);
                                    _didIteratorError3 = true;
                                    _iteratorError3 = _context10.t0;

                                case 23:
                                    _context10.prev = 23;
                                    _context10.prev = 24;

                                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
                                        _iterator3.return();
                                    }

                                case 26:
                                    _context10.prev = 26;

                                    if (!_didIteratorError3) {
                                        _context10.next = 29;
                                        break;
                                    }

                                    throw _iteratorError3;

                                case 29:
                                    return _context10.finish(26);

                                case 30:
                                    return _context10.finish(23);

                                case 31:
                                case 'end':
                                    return _context10.stop();
                            }
                        }
                    }, _callee10, this, [[6, 19, 23, 31], [24,, 26, 30]]);
                }));

                return function pack(_x10) {
                    return _ref11.apply(this, arguments);
                };
            }();

            require('babel-polyfill');

            var _path = require('path');

            var _fsExtra = require('fs-extra');

            var _commander = require('commander');

            var _commander2 = _interopRequireDefault(_commander);

            var _Component = require('./Component');

            var _Component2 = _interopRequireDefault(_Component);

            var _puppeteerBrowser = require('puppeteer-browser');

            var _puppeteerBrowser2 = _interopRequireDefault(_puppeteerBrowser);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }

            var manifest = JSON.parse((0, _fsExtra.readFileSync)('package.json') + '');

            var folder = manifest.directories || '';

            var command_bundle = bundle.bind(null, folder.lib);

            _commander2.default.command('bundle', 'Bundle a component').on('command:bundle', command_bundle).command('preview', 'Real-time preview during development').on('command:preview', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
                return regeneratorRuntime.wrap(function _callee11$(_context11) {
                    while (1) {
                        switch (_context11.prev = _context11.next) {
                            case 0:
                                _context11.next = 2;
                                return command_bundle();

                            case 2:
                                _context11.next = 4;
                                return _puppeteerBrowser2.default.getPage('.', folder.test || 'test/', command_bundle);

                            case 4:
                            case 'end':
                                return _context11.stop();
                        }
                    }
                }, _callee11, _this2);
            }))).command('pack', 'Compress all the components into one HTML file').on('command:pack', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
                return regeneratorRuntime.wrap(function _callee12$(_context12) {
                    while (1) {
                        switch (_context12.prev = _context12.next) {
                            case 0:
                                _context12.next = 2;
                                return command_bundle();

                            case 2:
                                _context12.next = 4;
                                return pack('dist/');

                            case 4:
                            case 'end':
                                return _context12.stop();
                        }
                    }
                }, _callee12, _this2);
            }))).parse(process.argv);
        }
    },
    'fs-extra': { exports: fs_extra },
    'path': { exports: path },
    'jsdom': { exports: jsdom },
    'amd-bundle': { exports: amd_bundle },
    'sass': { exports: sass },
    'less': { exports: less },
    'stylus': { exports: stylus },
    'babel-polyfill': { exports: babel_polyfill },
    'commander': { exports: commander },
    'puppeteer-browser': { exports: puppeteer_browser }
};

    return require('./index');
});