#! /usr/bin/env node

//
//  Generated by https://www.npmjs.com/package/amd-bundle
//
(function (factory) {

    if ((typeof define === 'function')  &&  define.amd)
        define('web-cell', ["@tech_query/node-toolkit","jsdom","stylus","fs-extra","path","amd-bundle","less","sass","commander","puppeteer-browser"], factory);
    else if (typeof module === 'object')
        return  module.exports = factory(require('@tech_query/node-toolkit'),require('jsdom'),require('stylus'),require('fs-extra'),require('path'),require('amd-bundle'),require('less'),require('sass'),require('commander'),require('puppeteer-browser'));
    else
        return  this['web-cell'] = factory(this['@tech_query/node-toolkit'],this['jsdom'],this['stylus'],this['fs-extra'],this['path'],this['amd-bundle'],this['less'],this['sass'],this['commander'],this['puppeteer-browser']);

})(function (_tech_query_node_toolkit,jsdom,stylus,fs_extra,path,amd_bundle,less,sass,commander,puppeteer_browser) {

function merge(base, path) {
  return (base + '/' + path).replace(/\/\//g, '/').replace(/[^/.]+\/\.\.\//g, '').replace(/\.\//g, function (match, index, input) {
    return input[index - 1] === '.' ? match : '';
  });
}

function outPackage(name) {
  return /^[^./]/.test(name);
}

    var require = _require_.bind(null, './');

    function _require_(base, path) {

        var module = _module_[
                outPackage( path )  ?  path  :  ('./' + merge(base, path))
            ],
            exports;

        if (! module.exports) {

            module.exports = { };

            var dependency = module.dependency;

            for (var i = 0;  dependency[i];  i++)
                module.dependency[i] = require( dependency[i] );

            exports = module.factory.apply(
                null,  module.dependency.concat(
                    _require_.bind(null, module.base),  module.exports,  module
                )
            );

            if (exports != null)  module.exports = exports;

            delete module.dependency;  delete module.factory;
        }

        return module.exports;
    }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _module_ = {
  './utility': {
    base: '.',
    dependency: [],
    factory: function factory(require, exports, module) {
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.parseStylus = parseStylus;
      exports.document = exports.meta = void 0;

      var _nodeToolkit = require('@tech_query/node-toolkit');

      var _jsdom = require('jsdom');

      var _stylus = _interopRequireDefault(require('stylus'));

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }
      /**
       * `package.json` data of `process.cwd()`
       *
       * @type {Object}
       */


      var meta = (0, _nodeToolkit.packageOf)('./test').meta;
      /**
       * @type {Document}
       */

      exports.meta = meta;
      var document = new _jsdom.JSDOM().window.document;
      /**
       * @param {string} source
       * @param {Object} [option] - https://github.com/stylus/stylus/blob/HEAD/docs/js.md
       *
       * @return {Promise<string>} CSS source code
       */

      exports.document = document;

      function parseStylus(source) {
        var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        return new Promise(function (resolve, reject) {
          return _stylus.default.render(source, option, function (error, CSS) {
            return error ? reject(error) : resolve(CSS);
          });
        });
      }
    }
  },
  './Component': {
    base: '.',
    dependency: [],
    factory: function factory(require, exports, module) {
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;

      var _fsExtra = require('fs-extra');

      var _path = require('path');

      var _jsdom = require('jsdom');

      var _amdBundle = _interopRequireDefault(require('amd-bundle'));

      var _less = _interopRequireDefault(require('less'));

      var SASS = _interopRequireWildcard(require('sass'));

      var _utility = require('./utility');

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};

          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) {
                var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

                if (desc.get || desc.set) {
                  Object.defineProperty(newObj, key, desc);
                } else {
                  newObj[key] = obj[key];
                }
              }
            }
          }

          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var single_entry = (0, _path.join)(_utility.meta.directories.lib || '', 'index.js');
      /**
       * Component packer
       */

      var Component =
      /*#__PURE__*/
      function () {
        /**
         * @param {string} path - Component directory
         */
        function Component(path) {
          _classCallCheck(this, Component);

          this.path = path;
          this.name = (0, _path.basename)(path);
          this.entry = (0, _path.join)(path, 'index');
        }
        /**
         * @param {string} path
         *
         * @return {DocumentFragment}
         */


        _createClass(Component, [{
          key: "toHTML",

          /**
           * @return {DocumentFragment} HTML version bundle of this component
           */
          value: function () {
            var _toHTML = _asyncToGenerator(
            /*#__PURE__*/
            regeneratorRuntime.mark(function _callee() {
              var _fragment$querySelect;

              var fragment, CSS, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, sheet, style, script;

              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      _context.next = 2;
                      return Component.parseHTML(this.entry + '.html');

                    case 2:
                      fragment = _context.sent;
                      CSS = [];
                      _iteratorNormalCompletion = true;
                      _didIteratorError = false;
                      _iteratorError = undefined;
                      _context.prev = 7;
                      _iterator = Component.findStyle(fragment)[Symbol.iterator]();

                    case 9:
                      if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                        _context.next = 21;
                        break;
                      }

                      sheet = _step.value;
                      _context.next = 13;
                      return Component.parseCSS(sheet.textContent || (0, _path.join)(this.path, sheet.getAttribute('href')), sheet.type, this.entry + '.css');

                    case 13:
                      style = _context.sent;

                      if (style) {
                        _context.next = 16;
                        break;
                      }

                      return _context.abrupt("continue", 18);

                    case 16:
                      sheet.replaceWith(style);
                      if (style.parentNode === fragment) CSS.push(style);

                    case 18:
                      _iteratorNormalCompletion = true;
                      _context.next = 9;
                      break;

                    case 21:
                      _context.next = 27;
                      break;

                    case 23:
                      _context.prev = 23;
                      _context.t0 = _context["catch"](7);
                      _didIteratorError = true;
                      _iteratorError = _context.t0;

                    case 27:
                      _context.prev = 27;
                      _context.prev = 28;

                      if (!_iteratorNormalCompletion && _iterator.return != null) {
                        _iterator.return();
                      }

                    case 30:
                      _context.prev = 30;

                      if (!_didIteratorError) {
                        _context.next = 33;
                        break;
                      }

                      throw _iteratorError;

                    case 33:
                      return _context.finish(30);

                    case 34:
                      return _context.finish(27);

                    case 35:
                      (_fragment$querySelect = fragment.querySelector('template').content).prepend.apply(_fragment$querySelect, CSS);

                      script = fragment.querySelector('script');
                      if (script) script.replaceWith(Component.parseJS((0, _path.join)(this.path, script.getAttribute('src'))));
                      return _context.abrupt("return", fragment);

                    case 39:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee, this, [[7, 23, 27, 35], [28,, 30, 34]]);
            }));

            return function toHTML() {
              return _toHTML.apply(this, arguments);
            };
          }()
          /**
           * @return {string} JS version bundle of this component
           */

        }, {
          key: "toJS",
          value: function () {
            var _toJS = _asyncToGenerator(
            /*#__PURE__*/
            regeneratorRuntime.mark(function _callee2() {
              var temp_file, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, file, type, temp, source;

              return regeneratorRuntime.wrap(function _callee2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      temp_file = [];
                      _iteratorNormalCompletion2 = true;
                      _didIteratorError2 = false;
                      _iteratorError2 = undefined;
                      _context2.prev = 4;
                      _context2.next = 7;
                      return (0, _fsExtra.readdir)(this.path);

                    case 7:
                      _context2.t0 = Symbol.iterator;
                      _iterator2 = _context2.sent[_context2.t0]();

                    case 9:
                      if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                        _context2.next = 43;
                        break;
                      }

                      file = _step2.value;
                      file = (0, _path.join)(this.path, file);

                      if ((0, _fsExtra.statSync)(file).isFile()) {
                        _context2.next = 14;
                        break;
                      }

                      return _context2.abrupt("continue", 40);

                    case 14:
                      type = file.split('.').slice(-1)[0], temp = "".concat(file, ".js");
                      _context2.t1 = type;
                      _context2.next = _context2.t1 === 'html' ? 18 : _context2.t1 === 'js' ? 26 : _context2.t1 === 'json' ? 27 : 32;
                      break;

                    case 18:
                      _context2.t2 = JSON;
                      _context2.t3 = Component;
                      _context2.next = 22;
                      return this.toHTML();

                    case 22:
                      _context2.t4 = _context2.sent;
                      _context2.t5 = _context2.t3.stringOf.call(_context2.t3, _context2.t4);
                      file = _context2.t2.stringify.call(_context2.t2, _context2.t5);
                      return _context2.abrupt("break", 37);

                    case 26:
                      return _context2.abrupt("continue", 40);

                    case 27:
                      _context2.next = 29;
                      return (0, _fsExtra.readFile)(file);

                    case 29:
                      _context2.t6 = _context2.sent;
                      file = _context2.t6 + '';
                      return _context2.abrupt("break", 37);

                    case 32:
                      _context2.t7 = JSON;
                      _context2.next = 35;
                      return Component.parseCSS(file);

                    case 35:
                      _context2.t8 = _context2.sent.textContent;
                      file = _context2.t7.stringify.call(_context2.t7, _context2.t8);

                    case 37:
                      temp_file.push(temp);
                      _context2.next = 40;
                      return (0, _fsExtra.outputFile)(temp, "export default ".concat(file));

                    case 40:
                      _iteratorNormalCompletion2 = true;
                      _context2.next = 9;
                      break;

                    case 43:
                      _context2.next = 49;
                      break;

                    case 45:
                      _context2.prev = 45;
                      _context2.t9 = _context2["catch"](4);
                      _didIteratorError2 = true;
                      _iteratorError2 = _context2.t9;

                    case 49:
                      _context2.prev = 49;
                      _context2.prev = 50;

                      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                        _iterator2.return();
                      }

                    case 52:
                      _context2.prev = 52;

                      if (!_didIteratorError2) {
                        _context2.next = 55;
                        break;
                      }

                      throw _iteratorError2;

                    case 55:
                      return _context2.finish(52);

                    case 56:
                      return _context2.finish(49);

                    case 57:
                      source = Component.packJS(this.entry + '.js');
                      _context2.next = 60;
                      return Promise.all(temp_file.map(function (file) {
                        return (0, _fsExtra.remove)(file);
                      }));

                    case 60:
                      return _context2.abrupt("return", source);

                    case 61:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, _callee2, this, [[4, 45, 49, 57], [50,, 52, 56]]);
            }));

            return function toJS() {
              return _toJS.apply(this, arguments);
            };
          }()
        }], [{
          key: "parseHTML",
          value: function () {
            var _parseHTML = _asyncToGenerator(
            /*#__PURE__*/
            regeneratorRuntime.mark(function _callee3(path) {
              return regeneratorRuntime.wrap(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      _context3.t0 = _jsdom.JSDOM;
                      _context3.next = 3;
                      return (0, _fsExtra.readFile)(path);

                    case 3:
                      _context3.t1 = _context3.sent;
                      _context3.t2 = _context3.t1 + '';
                      return _context3.abrupt("return", _context3.t0.fragment.call(_context3.t0, _context3.t2));

                    case 6:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, _callee3, this);
            }));

            return function parseHTML(_x) {
              return _parseHTML.apply(this, arguments);
            };
          }()
          /**
           * @param {string}  source - File path or Style source code
           * @param {?string} type   - MIME type
           * @param {string}  [base] - Path of the file which `@import` located in
           *
           * @return {?Element} Style element
           */

        }, {
          key: "parseCSS",
          value: function () {
            var _parseCSS = _asyncToGenerator(
            /*#__PURE__*/
            regeneratorRuntime.mark(function _callee4(source, type, base) {
              var style, paths;
              return regeneratorRuntime.wrap(function _callee4$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      type = type ? type.split('/')[1] : (0, _path.extname)(source).slice(1);

                      if (source.includes('\n')) {
                        _context4.next = 6;
                        break;
                      }

                      _context4.next = 4;
                      return (0, _fsExtra.readFile)(base = source);

                    case 4:
                      _context4.t0 = _context4.sent;
                      source = _context4.t0 + '';

                    case 6:
                      paths = [(0, _path.dirname)(base)];
                      _context4.t1 = type;
                      _context4.next = _context4.t1 === 'css' ? 10 : _context4.t1 === 'sass' ? 12 : _context4.t1 === 'scss' ? 12 : _context4.t1 === 'less' ? 14 : _context4.t1 === 'stylus' ? 18 : 21;
                      break;

                    case 10:
                      style = source;
                      return _context4.abrupt("break", 21);

                    case 12:
                      style = SASS.renderSync({
                        data: source,
                        includePaths: paths
                      }).css;
                      return _context4.abrupt("break", 21);

                    case 14:
                      _context4.next = 16;
                      return _less.default.render(source, {
                        paths: paths
                      });

                    case 16:
                      style = _context4.sent.css;
                      return _context4.abrupt("break", 21);

                    case 18:
                      _context4.next = 20;
                      return (0, _utility.parseStylus)(source, {
                        paths: paths
                      });

                    case 20:
                      style = _context4.sent;

                    case 21:
                      return _context4.abrupt("return", style && Object.assign(_utility.document.createElement('style'), {
                        textContent: style
                      }));

                    case 22:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee4, this);
            }));

            return function parseCSS(_x2, _x3, _x4) {
              return _parseCSS.apply(this, arguments);
            };
          }()
          /**
           * @param {DocumentFragment} fragment
           *
           * @return {Element[]}
           */

        }, {
          key: "findStyle",
          value: function findStyle(fragment) {
            var _ref;

            return _toConsumableArray(fragment.querySelectorAll('link[rel="stylesheet"]')).concat(_toConsumableArray((_ref = []).concat.apply(_ref, _toConsumableArray(Array.from(fragment.querySelectorAll('template'), function (template) {
              return _toConsumableArray(template.content.querySelectorAll('style'));
            })))));
          }
          /**
           * @param {string} tagName
           *
           * @return {string}
           */

        }, {
          key: "identifierOf",
          value: function identifierOf(tagName) {
            return tagName[0].toUpperCase() + tagName.replace(/-(\w)/g, function (_, char) {
              return char.toUpperCase();
            }).slice(1);
          }
          /**
           * @param {String} path - Full name of a JS file
           *
           * @return {String} Packed JS source code
           */

        }, {
          key: "packJS",
          value: function packJS(path) {
            var name = path === single_entry && _utility.meta.name;
            path = path.split('.').slice(0, -1).join('.');
            return new _amdBundle.default(path).bundle(name || this.identifierOf((0, _path.basename)((0, _path.dirname)(path))));
          }
          /**
           * @param {string} path
           *
           * @return {Element}
           */

        }, {
          key: "parseJS",
          value: function parseJS(path) {
            return Object.assign(_utility.document.createElement('script'), {
              text: "\n".concat(this.packJS(path), "\n")
            });
          }
          /**
           * @param {DocumentFragment} fragment
           *
           * @return {string}
           */

        }, {
          key: "stringOf",
          value: function stringOf(fragment) {
            return Array.from(fragment.childNodes, function (node) {
              return node[node.nodeType === 1 ? 'outerHTML' : 'nodeValue'];
            }).join('');
          }
        }]);

        return Component;
      }();

      exports.default = Component;
    }
  },
  './command': {
    base: '.',
    dependency: [],
    factory: function factory(require, exports, module) {
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.bundle = bundle;
      exports.pack = pack;

      var _path = require('path');

      var _fsExtra = require('fs-extra');

      var _Component = _interopRequireDefault(require('./Component'));

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }
      /**
       * Bundle components to JS modules (or HTML files)
       *
       * @param {string}  path   - Source directory
       * @param {boolean} [HTML] - Whether bundle as HTML
       *
       * @return {string[]} Component paths
       */


      function bundle(_x5, _x6) {
        return _bundle.apply(this, arguments);
      }
      /**
       * Bundle components into a JS or HTML package
       *
       * @param {string}  path   - Source directory
       * @param {boolean} [HTML] - Whether bundle as HTML
       *
       * @return {string[]} Component paths
       */


      function _bundle() {
        _bundle = _asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee5(path, HTML) {
          var _result;

          var type, _type_, result, component;

          return regeneratorRuntime.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  type = HTML ? 'HTML' : 'JS';
                  _type_ = type.toLowerCase(), result = [];

                  if (!(0, _fsExtra.existsSync)((0, _path.join)(path, "index.".concat(_type_)))) {
                    _context5.next = 12;
                    break;
                  }

                  component = new _Component.default(path);
                  result[0] = "dist/".concat(component.name, ".").concat(_type_);
                  _context5.t0 = (0, _fsExtra.outputFile);
                  _context5.t1 = result[0];
                  _context5.next = 9;
                  return component["to".concat(type)]();

                case 9:
                  _context5.t2 = _context5.sent;
                  _context5.next = 12;
                  return (0, _context5.t0)(_context5.t1, _context5.t2);

                case 12:
                  if (!(0, _fsExtra.statSync)(path).isDirectory()) {
                    _context5.next = 26;
                    break;
                  }

                  _context5.t3 = (_result = result).concat;
                  _context5.t4 = _result;
                  _context5.t5 = _toConsumableArray;
                  _context5.t6 = Promise;
                  _context5.next = 19;
                  return (0, _fsExtra.readdir)(path);

                case 19:
                  _context5.t7 = function (file) {
                    return bundle((0, _path.join)(path, file), HTML);
                  };

                  _context5.t8 = _context5.sent.map(_context5.t7);
                  _context5.next = 23;
                  return _context5.t6.all.call(_context5.t6, _context5.t8);

                case 23:
                  _context5.t9 = _context5.sent;
                  _context5.t10 = (0, _context5.t5)(_context5.t9);
                  result = _context5.t3.apply.call(_context5.t3, _context5.t4, _context5.t10);

                case 26:
                  return _context5.abrupt("return", result);

                case 27:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5, this);
        }));
        return _bundle.apply(this, arguments);
      }

      function pack(_x7, _x8) {
        return _pack.apply(this, arguments);
      }

      function _pack() {
        _pack = _asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee6(path, HTML) {
          var file;
          return regeneratorRuntime.wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  _context6.next = 2;
                  return bundle(path, HTML);

                case 2:
                  file = _context6.sent;
                  _context6.next = 5;
                  return (0, _fsExtra.outputFile)("dist/index.".concat(HTML ? 'html' : 'js'), file.map(function (item) {
                    item = (0, _path.basename)(item);
                    console.info("\u221A Component \"".concat(item, "\" is packed in"));
                    return HTML ? "<link rel=\"import\" href=\"".concat(item, "\">") : "export * from './".concat(item, "';");
                  }).join('\n'));

                case 5:
                  return _context6.abrupt("return", file);

                case 6:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6, this);
        }));
        return _pack.apply(this, arguments);
      }
    }
  },
  './index': {
    base: '.',
    dependency: [],
    factory: function factory(require, exports, module) {
      var _nodeToolkit = require('@tech_query/node-toolkit');

      var _commander = _interopRequireDefault(require('commander'));

      var _command = require('./command');

      var _puppeteerBrowser = _interopRequireDefault(require('puppeteer-browser'));

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var meta = (0, _nodeToolkit.packageOf)((0, _nodeToolkit.currentModulePath)()).meta,
          manifest = (0, _nodeToolkit.packageOf)('./test').meta;
      var folder = manifest.directories || '';

      _commander.default.version(meta.version).description(meta.description).command('pack', 'Bundle components to a package with JS modules (or HTML files) in it').on('command:pack', function () {
        return (0, _command.pack)(folder.lib, _commander.default.HTML);
      }).command('preview', 'Real-time preview during development').on('command:preview',
      /*#__PURE__*/
      _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee7() {
        var command;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                command = function command() {
                  return (0, _command.pack)(folder.lib, _commander.default.HTML);
                };

                _context7.next = 3;
                return command();

              case 3:
                _context7.next = 5;
                return _puppeteerBrowser.default.getPage('.', folder.test || 'test/', command);

              case 5:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }))).option('-H, --HTML', 'Bundle as HTML').parse(process.argv);
    }
  },
  '@tech_query/node-toolkit': {
    exports: _tech_query_node_toolkit
  },
  'jsdom': {
    exports: jsdom
  },
  'stylus': {
    exports: stylus
  },
  'fs-extra': {
    exports: fs_extra
  },
  'path': {
    exports: path
  },
  'amd-bundle': {
    exports: amd_bundle
  },
  'less': {
    exports: less
  },
  'sass': {
    exports: sass
  },
  'commander': {
    exports: commander
  },
  'puppeteer-browser': {
    exports: puppeteer_browser
  }
};

    return require('./index');
});