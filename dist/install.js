#! /usr/bin/env node

//
//  Generated by https://www.npmjs.com/package/amd-bundle
//
(function (factory) {

    if ((typeof define === 'function')  &&  define.amd)
        define('install', ["child_process","stylus"], factory);
    else if (typeof module === 'object')
        return  module.exports = factory(require('child_process'),require('stylus'));
    else
        return  this['install'] = factory(this['child_process'],this['stylus']);

})(function (child_process,stylus) {

function merge(base, path) {

    return (base + '/' + path).replace(/\/\//g, '/').replace(/[^/.]+\/\.\.\//g, '').replace(/\.\//g, function (match, index, input) {

        return input[index - 1] === '.' ? match : '';
    });
}

function outPackage(name) {
    return (/^[^./]/.test(name)
    );
}

    var require = _require_.bind(null, './');

    function _require_(base, path) {

        var module = _module_[
                outPackage( path )  ?  path  :  ('./' + merge(base, path))
            ],
            exports;

        if (! module.exports) {

            module.exports = { };

            var dependency = module.dependency;

            for (var i = 0;  dependency[i];  i++)
                module.dependency[i] = require( dependency[i] );

            exports = module.factory.apply(
                null,  module.dependency.concat(
                    _require_.bind(null, module.base),  module.exports,  module
                )
            );

            if (exports != null)  module.exports = exports;

            delete module.dependency;  delete module.factory;
        }

        return module.exports;
    }

var _module_ = {
    './utility': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.getNPMConfig = getNPMConfig;
            exports.setNPMConfig = setNPMConfig;
            exports.parseStylus = parseStylus;

            var _child_process = require('child_process');

            var _stylus = require('stylus');

            var _stylus2 = _interopRequireDefault(_stylus);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }

            /**
             * @param {string} key
             *
             * @return {?*}
             */
            function getNPMConfig(key) {

                var value = ((0, _child_process.execSync)('npm get ' + key) + '').trim();

                if (value !== 'undefined') try {
                    return JSON.parse(value);
                } catch (error) {
                    return value;
                }
            }

            /**
             * @param {string} key
             * @param {*}      value
             */
            function setNPMConfig(key, value) {

                (0, _child_process.execSync)('npm set ' + key + ' ' + value);

                console.info(key + ' = ' + value);
            }

            /**
             * @param {string} source
             * @param {Object} [option] - https://github.com/stylus/stylus/blob/HEAD/docs/js.md
             *
             * @return {Promise<string>} CSS source code
             */
            function parseStylus(source) {
                var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};


                return new Promise(function (resolve, reject) {
                    return _stylus2.default.render(source, option, function (error, CSS) {
                        return error ? reject(error) : resolve(CSS);
                    });
                });
            }
        }
    },
    './install': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            var _utility = require('./utility');

            var browser;

            var _arr = ['chrome', 'firefox'];
            for (var _i = 0; _i < _arr.length; _i++) {
                var name = _arr[_i];if ((0, _utility.getNPMConfig)(name)) {

                    browser = name;break;
                }
            }if (browser = browser || process.platform === 'win32' && 'IE') (0, _utility.setNPMConfig)('PUPPETEER_BROWSER', browser);
        }
    },
    'child_process': { exports: child_process },
    'stylus': { exports: stylus }
};

    return require('./install');
});